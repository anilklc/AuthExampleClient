@model List<ApplicationService>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/_Layout.cshtml";
}

<div class="container mt-5">
    <h2>Authorize Menu Management</h2>
    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Service Name</th>
                <th>Action Type</th>
                <th>HTTP Type</th>
                <th>Definition</th>
                <th>Code</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var service in Model)
            {
                foreach (var action in service.Actions)
                {
                    <tr>
                        <td>@service.Name</td>
                        <td>@action.ActionType</td>
                        <td>@action.HttpType</td>
                        <td>@action.Definiton</td>
                        <td>@action.Code</td>
                        <td>
                            <button type="button" class="btn btn-primary assign-role-btn"
                                    data-menu="@service.Name"
                                    data-code="@action.Code"
                                    data-bs-toggle="modal"
                                    data-bs-target="#roleModalCenter">
                                Assign a Role
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Modal -->
    <div class="modal fade" id="roleModalCenter" tabindex="-1" aria-labelledby="roleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="roleModalCenterTitle">Assign a Role</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="roleList">
                        <!-- Rollerin dinamik olarak yükleneceği yer -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="saveRolesBtn" type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal -->

    <script>
        let selectedMenu = '';
        let selectedCode = '';

        // Role butonuna tıklandığında modalı aç
        document.querySelectorAll('.assign-role-btn').forEach(button => {
            button.addEventListener('click', function () {
                selectedMenu = this.getAttribute('data-menu');
                selectedCode = this.getAttribute('data-code');

                // Rolleri ve atanmış olanları yeniden yükle
                fetch(`@Url.Action("GetRolesForMenu", "AuthorizeMenu")?menu=${selectedMenu}&code=${selectedCode}`)
                    .then(response => response.json())
                    .then(data => {
                        const roleListContainer = document.getElementById('roleList');
                        roleListContainer.innerHTML = ''; // Önce içeriği temizle

                        // Eğer roller geldiyse
                        if (data && data.allRoles && data.allRoles.length > 0) {
                            data.allRoles.forEach(role => {
                                // Atanmış roller varsa checkbox'ı checked yap
                                const isChecked = data.assignedRoleIds.includes(role.id) ? 'checked' : '';

                                roleListContainer.innerHTML += `
                                            <div>
                                                <input type="checkbox" name="roleIds" value="${role.id}" id="role_${role.id}" ${isChecked} />
                                                <label for="role_${role.id}">${role.name}</label>
                                            </div>
                                        `;
                            });
                        } else {
                            roleListContainer.innerHTML = `<p>No roles found.</p>`;
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching roles:", error);
                        document.getElementById('roleList').innerHTML = `<p>Error loading roles.</p>`;
                    });
            });
        });

        document.getElementById('saveRolesBtn').addEventListener('click', function () {
            const checkedBoxes = document.querySelectorAll('input[name="roleIds"]:checked');
            const roleIds = Array.from(checkedBoxes).map(box => box.value);

            const modal = new bootstrap.Modal(document.getElementById('roleModalCenter'));
            modal.hide();

            fetch('@Url.Action("AssignRoles", "AuthorizeMenu")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Roles: roleIds,
                    menu: selectedMenu,
                    code: selectedCode
                })
            });


            setTimeout(() => {
                window.location.href = '@Url.Action("Index", "AuthorizeMenu")';
            },100);
        });



    </script>
</div>
